/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rad.demo.ui.admins;

import com.rad.demo.database.AdminsSQL;
import com.rad.demo.entities.Admins;
import com.rad.demo.ui.DashBoardView;
import static com.rad.demo.ui.DashBoardView.DesktopPane;
import java.awt.Component;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BHARATHA
 */
public class AdminDetailsView extends javax.swing.JInternalFrame {

    private final SingleAdminView saView = new SingleAdminView();
    private final NewAdminView newView = new NewAdminView();
    private int adminId;

    /**
     * Creates new form AdminDetailsView
     */
    public AdminDetailsView() {
        initComponents();
    }

    private DefaultTableModel dtmAdmin;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdmin = new javax.swing.JTable();
        cbRemove = new javax.swing.JCheckBox();
        btnRemove = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setClosable(true);
        setTitle("Admins List");

        tblAdmin.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tblAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Title", "Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAdmin.getTableHeader().setReorderingAllowed(false);
        tblAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblAdminMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblAdmin);
        if (tblAdmin.getColumnModel().getColumnCount() > 0) {
            tblAdmin.getColumnModel().getColumn(0).setMinWidth(0);
            tblAdmin.getColumnModel().getColumn(0).setPreferredWidth(90);
            tblAdmin.getColumnModel().getColumn(0).setMaxWidth(90);
            tblAdmin.getColumnModel().getColumn(1).setMinWidth(0);
            tblAdmin.getColumnModel().getColumn(1).setPreferredWidth(90);
            tblAdmin.getColumnModel().getColumn(1).setMaxWidth(90);
            tblAdmin.getColumnModel().getColumn(2).setPreferredWidth(250);
        }

        cbRemove.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbRemove.setText("Select to remove the selected admin/head of the LAB");
        cbRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRemoveActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.setEnabled(false);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbRemove)
                        .addGap(339, 339, 339))
                    .addComponent(jScrollPane1))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(cbRemove)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRemoveActionPerformed
        if (cbRemove.isSelected()) {
            btnRemove.setEnabled(true);
        } else {
            btnRemove.setEnabled(false);
        }
    }//GEN-LAST:event_cbRemoveActionPerformed

    private void tblAdminMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAdminMouseReleased
        int id = 0;
        if (evt.getButton() == 1) {
            if (evt.getClickCount() == 2) {
                int row = tblAdmin.getSelectedRow();

                id = Integer.parseInt(tblAdmin.getValueAt(row, 0).toString());
                if (row >= 0) {
                    saView.dispose();
                    DashBoardView.DesktopPane.remove((Component) saView);
                    DashBoardView.DesktopPane.add((Component) saView);
                    try {
                        saView.initializeView(adminId, id);
                    } catch (SQLException ex) {
                        Logger.getLogger(AdminDetailsView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    saView.setLocation((int) ((DesktopPane.getSize().width - saView.getSize().width) / 2), (int) ((DesktopPane.getSize().height - saView.getSize().height) / 2));
                    saView.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_tblAdminMouseReleased

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        //int id = 0;
        int row = tblAdmin.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select a user to remove!", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (tblAdmin.getSelectedRowCount() == 1) {
                int input = JOptionPane.showConfirmDialog(this, "Do you want to remove this user?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (input == JOptionPane.YES_OPTION) {
                    int id = 0;
                    id = Integer.parseInt(tblAdmin.getValueAt(row, 0).toString());
                    AdminsSQL.setAvailable(id, 0);
                    JOptionPane.showMessageDialog(this, "Removed successfully!", "", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    DashBoardView.DesktopPane.remove((Component) this);
                    DashBoardView.DesktopPane.add((Component) this);
                    try {
                        this.initializeView(adminId);
                    } catch (SQLException ex) {
                        Logger.getLogger(DashBoardView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    this.setLocation((int) ((DesktopPane.getSize().width - this.getSize().width) / 2), (int) ((DesktopPane.getSize().height - this.getSize().height) / 2));
                    this.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Select one admin at a time!", "", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        newView.dispose();
        DashBoardView.DesktopPane.remove((Component) newView);
        DashBoardView.DesktopPane.add((Component) newView);
        newView.initializeView();
        newView.setLocation((int) ((DesktopPane.getSize().width - newView.getSize().width) / 2), (int) ((DesktopPane.getSize().height - newView.getSize().height) / 2));
        newView.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    public void tableInitialize() throws SQLException {

        setDtmAdmin();
        List<Admins> admin = AdminsSQL.getAdminsDetails();
        admin.forEach((Admins admins) -> {
            int id = admins.getAdminId();
            String title = admins.getTitle();
            String name = admins.getName();
            String role = admins.getRole();
            int avl = admins.getAvailable();
            if (avl == 1) {
                dtmAdmin.addRow(new Object[]{id, title, name, role});
            }
        });
    }

    public void initializeView(int adminId) throws SQLException {
        this.adminId = adminId;
        tableInitialize();
        cbRemove.setSelected(false);
        btnRemove.setEnabled(false);
    }

    private void setDtmAdmin() {
        dtmAdmin = (DefaultTableModel) this.tblAdmin.getModel();
        dtmAdmin.getDataVector().removeAllElements();
        dtmAdmin.fireTableDataChanged();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JCheckBox cbRemove;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAdmin;
    // End of variables declaration//GEN-END:variables
}
