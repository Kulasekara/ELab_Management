/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rad.demo.ui.apparatus;

import com.rad.demo.database.ApparatusSQL;
import com.rad.demo.entities.Apparatus;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BHARATHA
 */
public class ApparatusView extends javax.swing.JInternalFrame {

    /**
     * Creates new form Apparatus
     */
    public ApparatusView() {
        initComponents();
    }

    private DefaultTableModel dtmFamily;
    private DefaultTableModel dtmComponent;
    private DefaultTableModel dtmSelectedComponent;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblGroup = new javax.swing.JLabel();
        lblComponent = new javax.swing.JLabel();
        cmbGroup = new javax.swing.JComboBox<>();
        txtComponent = new javax.swing.JTextField();
        ScrollPaneFamily = new javax.swing.JScrollPane();
        tblFamily = new javax.swing.JTable();
        ScrollPaneComponent = new javax.swing.JScrollPane();
        tblComponent = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        ScrollPaneSelectedComponent = new javax.swing.JScrollPane();
        tblSelectedComponent = new javax.swing.JTable();
        lblSelectedComponent = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 120, 212)));
        setClosable(true);
        setTitle("Apparatus List");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblGroup.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblGroup.setText("Group :");
        jPanel1.add(lblGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        lblComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblComponent.setText("Component :");
        jPanel1.add(lblComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 130, -1));

        cmbGroup.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cmbGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGroupActionPerformed(evt);
            }
        });
        jPanel1.add(cmbGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 200, -1));

        txtComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtComponent.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.SystemColor.activeCaptionBorder));
        txtComponent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComponentKeyReleased(evt);
            }
        });
        jPanel1.add(txtComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 320, 20));

        tblFamily.setBackground(new java.awt.Color(240, 240, 240));
        tblFamily.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblFamily.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Family"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFamily.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblFamily.setGridColor(new java.awt.Color(240, 240, 240));
        tblFamily.getTableHeader().setReorderingAllowed(false);
        tblFamily.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblFamilyMouseReleased(evt);
            }
        });
        ScrollPaneFamily.setViewportView(tblFamily);
        if (tblFamily.getColumnModel().getColumnCount() > 0) {
            tblFamily.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel1.add(ScrollPaneFamily, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 200, 330));

        tblComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblComponent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Component", "QTY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblComponent.setMinimumSize(new java.awt.Dimension(15, 0));
        tblComponent.getTableHeader().setReorderingAllowed(false);
        tblComponent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComponentMouseClicked(evt);
            }
        });
        ScrollPaneComponent.setViewportView(tblComponent);
        if (tblComponent.getColumnModel().getColumnCount() > 0) {
            tblComponent.getColumnModel().getColumn(1).setMinWidth(0);
            tblComponent.getColumnModel().getColumn(1).setPreferredWidth(90);
            tblComponent.getColumnModel().getColumn(1).setMaxWidth(90);
        }

        jPanel1.add(ScrollPaneComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 320, 330));

        jSeparator1.setForeground(new java.awt.Color(0, 120, 212));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 550, 10));

        tblSelectedComponent.setBackground(new java.awt.Color(240, 240, 240));
        tblSelectedComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblSelectedComponent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group", "Family", "Component", "QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSelectedComponent.setAutoscrolls(false);
        tblSelectedComponent.setEnabled(false);
        tblSelectedComponent.setFocusable(false);
        tblSelectedComponent.setRequestFocusEnabled(false);
        tblSelectedComponent.setShowHorizontalLines(false);
        tblSelectedComponent.getTableHeader().setReorderingAllowed(false);
        ScrollPaneSelectedComponent.setViewportView(tblSelectedComponent);
        if (tblSelectedComponent.getColumnModel().getColumnCount() > 0) {
            tblSelectedComponent.getColumnModel().getColumn(0).setMinWidth(0);
            tblSelectedComponent.getColumnModel().getColumn(0).setPreferredWidth(90);
            tblSelectedComponent.getColumnModel().getColumn(0).setMaxWidth(90);
            tblSelectedComponent.getColumnModel().getColumn(1).setMinWidth(0);
            tblSelectedComponent.getColumnModel().getColumn(1).setPreferredWidth(175);
            tblSelectedComponent.getColumnModel().getColumn(1).setMaxWidth(175);
            tblSelectedComponent.getColumnModel().getColumn(3).setMinWidth(0);
            tblSelectedComponent.getColumnModel().getColumn(3).setPreferredWidth(60);
            tblSelectedComponent.getColumnModel().getColumn(3).setMaxWidth(60);
        }

        jPanel1.add(ScrollPaneSelectedComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 550, 50));

        lblSelectedComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblSelectedComponent.setText("Selected Component :");
        jPanel1.add(lblSelectedComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGroupActionPerformed
        try {
            setDtmFamily();
            setDtmComponent();
            setDtmSelectedComponent();
            resetTxt();
            cmbGroupAction(cmbGroup.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbGroupActionPerformed

    private void tblFamilyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFamilyMouseReleased
        try {
            setDtmComponent();
            setDtmSelectedComponent();
            resetTxt();
            tblFamilyAction(cmbGroup.getSelectedIndex(), tblFamily.getSelectedRow());
        } catch (SQLException ex) {
            Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblFamilyMouseReleased

    private void txtComponentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComponentKeyReleased
        try {
            setDtmComponent();
            txtComponentAction(cmbGroup.getSelectedIndex(), tblFamily.getSelectedRow(), txtComponent.getText());
        } catch (SQLException ex) {
            Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtComponentKeyReleased

    private void tblComponentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComponentMouseClicked
        if (evt.getButton() == 1) {
            if (evt.getClickCount() == 1) {
                try {
                    tblComponentAction();
                } catch (SQLException ex) {
                    Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_tblComponentMouseClicked

    public void initializeView() throws SQLException {
        setDtmFamily();
        setDtmComponent();
        setDtmSelectedComponent();
        resetTxt();

        cmbGroup.removeAllItems();
//        cmbGroup.addItem("<Select the group>");
        cmbGroup.addItem("<All groups>");

        List<String> groups = ApparatusSQL.getGroups();
        groups.forEach(group -> {
            cmbGroup.addItem(group);
        });
    }

    private void setDtmFamily() {
        dtmFamily = (DefaultTableModel) this.tblFamily.getModel();
        dtmFamily.getDataVector().removeAllElements();
        dtmFamily.fireTableDataChanged();
    }

    private void setDtmComponent() {
        dtmComponent = (DefaultTableModel) this.tblComponent.getModel();
        dtmComponent.getDataVector().removeAllElements();
        dtmComponent.fireTableDataChanged();
    }

    private void setDtmSelectedComponent() {
        dtmSelectedComponent = (DefaultTableModel) this.tblSelectedComponent.getModel();
        dtmSelectedComponent.getDataVector().removeAllElements();
        dtmSelectedComponent.fireTableDataChanged();
    }

    private void resetTxt() {
        txtComponent.setText("");
    }

    private void cmbGroupAction(int group) throws SQLException {
        switch (group) {
            case -1:
                break;
            case 0:
                List<Object> list1 = ApparatusSQL.getAllFamilies();
                list1.forEach(object -> {
                    dtmFamily.addRow(new Object[]{object});
                });
                break;

            default:
                List<Object> list2 = ApparatusSQL.getFamilies(cmbGroup.getSelectedItem().toString());
                list2.forEach(object -> {
                    dtmFamily.addRow(new Object[]{object});
                });
                break;

        }
    }

    private void tblFamilyAction(int group, int family) throws SQLException {
        if (group == -1 || family == -1); else if (group == 0 && family == 0) {
            List<Apparatus> list = ApparatusSQL.getAllComponents();
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        } else if (group == 0 && family != 0) {
            List<Apparatus> list = ApparatusSQL.getComponentsByFamily(tblFamily.getValueAt(family, 0).toString());
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        } else if (family == 0 && group != 0) {
            List<Apparatus> list = ApparatusSQL.getComponentsByGroup(cmbGroup.getSelectedItem().toString());
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        } else {
            List<Apparatus> list = ApparatusSQL.getComponents(cmbGroup.getSelectedItem().toString(), tblFamily.getValueAt(family, 0).toString());
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        }
    }

    private void txtComponentAction(int group, int family, String componentStr) throws SQLException {
        if (!componentStr.equals("")) {
            if (family == -1) {
                JOptionPane.showMessageDialog(this, "Select the family", "", JOptionPane.INFORMATION_MESSAGE);
                resetTxt();
                setDtmSelectedComponent();
            } else if (group == 0 && family == 0) {
                List<Apparatus> list = ApparatusSQL.searchAllComponents(componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            } else if (group == 0 && family != 0) {
                List<Apparatus> list = ApparatusSQL.searchComponentsByFamily(tblFamily.getValueAt(family, 0).toString(), componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            } else if (group != 0 && family == 0) {
                List<Apparatus> list = ApparatusSQL.searchComponentsByGroup(cmbGroup.getSelectedItem().toString(), componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            } else {
                List<Apparatus> list = ApparatusSQL.searchComponents(cmbGroup.getSelectedItem().toString(), tblFamily.getValueAt(family, 0).toString(), componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            }
        } else {
            if (family == -1); else {
                tblFamilyAction(group, family);
            }
        }
    }

    private void tblComponentAction() throws SQLException {
        int row = tblComponent.getSelectedRow();
        if (row != -1) {
            Apparatus apparatus = ApparatusSQL.searchByComponent(tblComponent.getValueAt(row, 0).toString());
            if (apparatus != null) {
                setDtmSelectedComponent();
                dtmSelectedComponent.addRow(new Object[]{apparatus.getGroup(), apparatus.getFamily(), apparatus.getComponent(), apparatus.getQty()});
            }
        } else {
            setDtmSelectedComponent();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneComponent;
    private javax.swing.JScrollPane ScrollPaneFamily;
    private javax.swing.JScrollPane ScrollPaneSelectedComponent;
    private javax.swing.JComboBox<String> cmbGroup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblComponent;
    private javax.swing.JLabel lblGroup;
    private javax.swing.JLabel lblSelectedComponent;
    private javax.swing.JTable tblComponent;
    private javax.swing.JTable tblFamily;
    private javax.swing.JTable tblSelectedComponent;
    private javax.swing.JTextField txtComponent;
    // End of variables declaration//GEN-END:variables
}
