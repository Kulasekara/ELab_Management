/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.rad.demo.ui.apparatus;

import com.rad.demo.database.ApparatusSQL;
import com.rad.demo.database.ListSQL;
import com.rad.demo.entities.Apparatus;
import com.rad.demo.ui.DashBoardView;
import static com.rad.demo.ui.DashBoardView.DesktopPane;
import com.rad.demo.ui.utils.ColorPalette;
import java.awt.Component;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author BHARATHA
 */
public class ManageApparatusView extends javax.swing.JInternalFrame {

    /**
     * Creates new form ManageApparatusView
     */
    public ManageApparatusView() {
        initComponents();
    }

    private DefaultTableModel dtmFamily;
    private DefaultTableModel dtmComponent;
    private DefaultTableModel dtmSelectedComponent;
    private int adminId;
    private boolean flagUpdateView;
    private boolean flagNewComponent;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        pnlUpdate = new javax.swing.JPanel();
        lblGroup = new javax.swing.JLabel();
        lblComponent = new javax.swing.JLabel();
        cmbGroup = new javax.swing.JComboBox<>();
        txtComponent = new javax.swing.JTextField();
        ScrollPaneFamily = new javax.swing.JScrollPane();
        tblFamily = new javax.swing.JTable();
        ScrollPaneComponent = new javax.swing.JScrollPane();
        tblComponent = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        ScrollPaneSelectedComponent = new javax.swing.JScrollPane();
        tblSelectedComponent = new javax.swing.JTable();
        lblSelectedComponent = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        spinnerQty = new javax.swing.JSpinner();
        cbRemove = new javax.swing.JCheckBox();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        pnlNewComponent = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblGroupNew = new javax.swing.JLabel();
        lblFamilyNew = new javax.swing.JLabel();
        lblComponentsNew = new javax.swing.JLabel();
        lblQtyNew = new javax.swing.JLabel();
        spinnerQtyNew = new javax.swing.JSpinner();
        txtNewComponent = new javax.swing.JTextField();
        txtNewFamily = new javax.swing.JTextField();
        txtNewGroup = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        pnlBtns = new javax.swing.JPanel();
        pnlUpdateBtn = new javax.swing.JPanel();
        btnUpdateView = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        pnlNewApparatusBtn = new javax.swing.JPanel();
        btnNewApparatusView = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 120, 212)));
        setClosable(true);
        setTitle("Manage Apparatus");

        pnlUpdate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblGroup.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblGroup.setText("Group :");
        pnlUpdate.add(lblGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, -1, -1));

        lblComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblComponent.setText("Component :");
        pnlUpdate.add(lblComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 120, -1));

        cmbGroup.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cmbGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGroupActionPerformed(evt);
            }
        });
        pnlUpdate.add(cmbGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 210, -1));

        txtComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtComponent.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.SystemColor.activeCaptionBorder));
        txtComponent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComponentKeyReleased(evt);
            }
        });
        pnlUpdate.add(txtComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 310, 20));

        tblFamily.setBackground(new java.awt.Color(240, 240, 240));
        tblFamily.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblFamily.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Family"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFamily.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblFamily.setGridColor(new java.awt.Color(240, 240, 240));
        tblFamily.getTableHeader().setReorderingAllowed(false);
        tblFamily.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblFamilyMouseReleased(evt);
            }
        });
        ScrollPaneFamily.setViewportView(tblFamily);

        pnlUpdate.add(ScrollPaneFamily, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 210, 240));

        tblComponent.setBackground(new java.awt.Color(240, 240, 240));
        tblComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblComponent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Component", "QTY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblComponent.getTableHeader().setReorderingAllowed(false);
        tblComponent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComponentMouseClicked(evt);
            }
        });
        ScrollPaneComponent.setViewportView(tblComponent);
        if (tblComponent.getColumnModel().getColumnCount() > 0) {
            tblComponent.getColumnModel().getColumn(1).setMinWidth(0);
            tblComponent.getColumnModel().getColumn(1).setPreferredWidth(90);
            tblComponent.getColumnModel().getColumn(1).setMaxWidth(90);
        }

        pnlUpdate.add(ScrollPaneComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 310, 240));

        jSeparator1.setForeground(new java.awt.Color(0, 120, 212));
        pnlUpdate.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 560, 10));

        tblSelectedComponent.setBackground(new java.awt.Color(240, 240, 240));
        tblSelectedComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblSelectedComponent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group", "Family", "Component", "QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSelectedComponent.setAutoscrolls(false);
        tblSelectedComponent.setEnabled(false);
        tblSelectedComponent.setFocusable(false);
        tblSelectedComponent.setRequestFocusEnabled(false);
        tblSelectedComponent.setShowHorizontalLines(false);
        tblSelectedComponent.getTableHeader().setReorderingAllowed(false);
        ScrollPaneSelectedComponent.setViewportView(tblSelectedComponent);
        if (tblSelectedComponent.getColumnModel().getColumnCount() > 0) {
            tblSelectedComponent.getColumnModel().getColumn(0).setMinWidth(0);
            tblSelectedComponent.getColumnModel().getColumn(0).setPreferredWidth(90);
            tblSelectedComponent.getColumnModel().getColumn(0).setMaxWidth(90);
            tblSelectedComponent.getColumnModel().getColumn(1).setMinWidth(0);
            tblSelectedComponent.getColumnModel().getColumn(1).setPreferredWidth(175);
            tblSelectedComponent.getColumnModel().getColumn(1).setMaxWidth(175);
            tblSelectedComponent.getColumnModel().getColumn(3).setMinWidth(0);
            tblSelectedComponent.getColumnModel().getColumn(3).setPreferredWidth(60);
            tblSelectedComponent.getColumnModel().getColumn(3).setMaxWidth(60);
        }

        pnlUpdate.add(ScrollPaneSelectedComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 560, 50));

        lblSelectedComponent.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblSelectedComponent.setText("Selected Component :");
        pnlUpdate.add(lblSelectedComponent, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setText("New qty. :");
        pnlUpdate.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, -1, 20));
        pnlUpdate.add(spinnerQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 60, -1));

        cbRemove.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbRemove.setText("Select to remove the selected component");
        cbRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRemoveActionPerformed(evt);
            }
        });
        pnlUpdate.add(cbRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlUpdate.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, 90, 30));

        btnRemove.setText("Remove");
        btnRemove.setEnabled(false);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        pnlUpdate.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 90, 30));

        lblGroupNew.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGroupNew.setText("Group           :");

        lblFamilyNew.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFamilyNew.setText("Family           :");

        lblComponentsNew.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblComponentsNew.setText("Component  :");

        lblQtyNew.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQtyNew.setText("Qty.              :");

        spinnerQtyNew.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spinnerQtyNew.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerQtyNewStateChanged(evt);
            }
        });

        txtNewComponent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtNewFamily.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtNewGroup.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lblGroupNew)
                            .addGap(10, 10, 10)
                            .addComponent(txtNewGroup))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblFamilyNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblComponentsNew, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNewFamily, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNewComponent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lblQtyNew)
                            .addGap(10, 10, 10)
                            .addComponent(spinnerQtyNew))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblGroupNew))
                    .addComponent(txtNewGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblFamilyNew))
                    .addComponent(txtNewFamily, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewComponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblComponentsNew))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblQtyNew))
                    .addComponent(spinnerQtyNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlNewComponentLayout = new javax.swing.GroupLayout(pnlNewComponent);
        pnlNewComponent.setLayout(pnlNewComponentLayout);
        pnlNewComponentLayout.setHorizontalGroup(
            pnlNewComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewComponentLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        pnlNewComponentLayout.setVerticalGroup(
            pnlNewComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewComponentLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(pnlUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(pnlNewComponent, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(pnlNewComponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(pnlUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(pnlNewComponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlBtns.setLayout(new java.awt.GridLayout(1, 0));

        btnUpdateView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnUpdateView.setText("Update");
        btnUpdateView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnUpdateViewMouseReleased(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 120, 212));

        javax.swing.GroupLayout pnlUpdateBtnLayout = new javax.swing.GroupLayout(pnlUpdateBtn);
        pnlUpdateBtn.setLayout(pnlUpdateBtnLayout);
        pnlUpdateBtnLayout.setHorizontalGroup(
            pnlUpdateBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnUpdateView, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
            .addGroup(pnlUpdateBtnLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlUpdateBtnLayout.setVerticalGroup(
            pnlUpdateBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpdateBtnLayout.createSequentialGroup()
                .addComponent(btnUpdateView, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlBtns.add(pnlUpdateBtn);

        btnNewApparatusView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNewApparatusView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNewApparatusView.setText("Add new component");
        btnNewApparatusView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnNewApparatusViewMouseReleased(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(0, 120, 212));

        javax.swing.GroupLayout pnlNewApparatusBtnLayout = new javax.swing.GroupLayout(pnlNewApparatusBtn);
        pnlNewApparatusBtn.setLayout(pnlNewApparatusBtnLayout);
        pnlNewApparatusBtnLayout.setHorizontalGroup(
            pnlNewApparatusBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnNewApparatusView, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
            .addGroup(pnlNewApparatusBtnLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlNewApparatusBtnLayout.setVerticalGroup(
            pnlNewApparatusBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNewApparatusBtnLayout.createSequentialGroup()
                .addComponent(btnNewApparatusView, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlBtns.add(pnlNewApparatusBtn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBtns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBtns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGroupActionPerformed
        try {
            setDtmFamily();
            setDtmComponent();
            setDtmSelectedComponent();
            resetTxt();
            cmbGroupAction(cmbGroup.getSelectedIndex());
        } catch (SQLException ex) {
            Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbGroupActionPerformed

    private void txtComponentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComponentKeyReleased
        try {
            setDtmComponent();
            txtComponentAction(cmbGroup.getSelectedIndex(), tblFamily.getSelectedRow(), txtComponent.getText());
        } catch (SQLException ex) {
            Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtComponentKeyReleased

    private void tblFamilyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFamilyMouseReleased
        try {
            setDtmComponent();
            setDtmSelectedComponent();
            resetTxt();
            tblFamilyAction(cmbGroup.getSelectedIndex(), tblFamily.getSelectedRow());
        } catch (SQLException ex) {
            Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblFamilyMouseReleased

    private void tblComponentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComponentMouseClicked
        if (evt.getButton() == 1) {
            if (evt.getClickCount() == 1) {
                try {
                    tblComponentAction();
                } catch (SQLException ex) {
                    Logger.getLogger(ApparatusView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_tblComponentMouseClicked

    private void btnUpdateAction() throws SQLException {
        String component = tblSelectedComponent.getValueAt(0, 2).toString();
        Apparatus temp2 = ApparatusSQL.getComponentDetails(component);
        int id = temp2.getId();
        int qty = Integer.parseInt(spinnerQty.getValue().toString());
        int q1 = Integer.parseInt(tblSelectedComponent.getValueAt(0, 3).toString());
        if (qty < 0 && (Math.abs(qty) > q1)) {
            JOptionPane.showMessageDialog(this, "Not that much components to remove.", "", JOptionPane.INFORMATION_MESSAGE);
            spinnerQty.setValue(0);
            return;
        }
        int newQty = q1 + qty;
        ListSQL.setQty(id, newQty);
    }

    private void btnUpdateViewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateViewMouseReleased
        try {
            pnlNewComponent.setVisible(false);
            initializeUpdateView();
            pnlUpdate.setVisible(true);
            jLayeredPane1.repaint();
            jLayeredPane1.revalidate();
        } catch (SQLException ex) {
            Logger.getLogger(ManageApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateViewMouseReleased

    private void cbRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRemoveActionPerformed
        if (cbRemove.isSelected()) {
            btnRemove.setEnabled(true);
        } else {
            btnRemove.setEnabled(false);
        }
    }//GEN-LAST:event_cbRemoveActionPerformed

    private void spinnerQtyNewStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerQtyNewStateChanged
        if (Integer.parseInt(spinnerQtyNew.getValue().toString()) < 0) {
            spinnerQtyNew.setValue(0);
        }
    }//GEN-LAST:event_spinnerQtyNewStateChanged

    private void btnNewApparatusViewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewApparatusViewMouseReleased
        pnlUpdate.setVisible(false);
        initializeNewComponentView();
        pnlNewComponent.setVisible(true);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }//GEN-LAST:event_btnNewApparatusViewMouseReleased

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            addBtnAction();
        } catch (SQLException ex) {
            Logger.getLogger(ManageApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int count = tblSelectedComponent.getRowCount();
        if (count == 0) {
            JOptionPane.showMessageDialog(this, "Please select a component!", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (Integer.parseInt(spinnerQty.getValue().toString()) != 0) {
                int input = JOptionPane.showConfirmDialog(this, "Do you want to update the quantity?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (input == JOptionPane.YES_OPTION) {
                    try {
                        btnUpdateAction();
                        JOptionPane.showMessageDialog(this, "The quantity of the component was updated successfully.", "", JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                        DashBoardView.DesktopPane.remove((Component) this);
                        DashBoardView.DesktopPane.add((Component) this);
                        this.initializeView();
                        this.setAdminId(adminId);
                        this.setLocation((int) ((DesktopPane.getSize().width - this.getSize().width) / 2), (int) ((DesktopPane.getSize().height - this.getSize().height) / 2));
                        this.setVisible(true);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageApparatusView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    spinnerQty.setValue(0);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Select the quantity", "", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int count = tblSelectedComponent.getRowCount();
        if (cbRemove.isSelected()) {
            switch (count) {
                case 0:
                    JOptionPane.showMessageDialog(this, "Please select a component to remove.", "", JOptionPane.INFORMATION_MESSAGE);
                    cbRemove.setSelected(false);
                    btnRemove.setEnabled(false);
                    break;
                case 1:
                    int input = JOptionPane.showConfirmDialog(this, "Do you want to remove the seleced component from the list?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (input == JOptionPane.YES_OPTION) {
                        try {
                            btnRemoveAction();
                            JOptionPane.showMessageDialog(this, "The selected component was removed successfully", "", JOptionPane.INFORMATION_MESSAGE);
                            this.dispose();
                            DashBoardView.DesktopPane.remove((Component) this);
                            DashBoardView.DesktopPane.add((Component) this);
                            this.initializeView();
                            this.setAdminId(adminId);
                            this.setLocation((int) ((DesktopPane.getSize().width - this.getSize().width) / 2), (int) ((DesktopPane.getSize().height - this.getSize().height) / 2));
                            this.setVisible(true);
                        } catch (SQLException ex) {
                            Logger.getLogger(ManageApparatusView.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        cbRemove.setSelected(false);
                        btnRemove.setEnabled(false);
                    }
                    break;
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    public void addBtnAction() throws SQLException {
        String group = txtNewGroup.getText();
        String family = txtNewFamily.getText();
        String components = txtNewComponent.getText();
        int qty = Integer.parseInt(spinnerQtyNew.getValue().toString());

        if (group.equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a group name!", "", JOptionPane.INFORMATION_MESSAGE);
        } else if (family.equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a family name!", "", JOptionPane.INFORMATION_MESSAGE);
        } else if (components.equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a component name!", "", JOptionPane.INFORMATION_MESSAGE);
        } else if (qty == 0) {
            JOptionPane.showMessageDialog(this, "Please select quantity!", "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Apparatus temp2 = ApparatusSQL.searchByComponent(components);
            if (temp2 == null) {
                int input = JOptionPane.showConfirmDialog(this, "Do you want to add this item to the list?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (input == JOptionPane.YES_OPTION) {
                    ListSQL.addNewItems(0, group, family, components, qty);
                    JOptionPane.showMessageDialog(this, "New component added successfully!", "", JOptionPane.INFORMATION_MESSAGE);
                    txtNewGroup.setText("");
                    txtNewFamily.setText("");
                    txtNewComponent.setText("");
                    spinnerQtyNew.setValue(0);
                }
                if (input == JOptionPane.NO_OPTION) {
                    txtNewGroup.setText("");
                    txtNewFamily.setText("");
                    txtNewComponent.setText("");
                    spinnerQtyNew.setValue(0);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Component is already in the list", "", JOptionPane.INFORMATION_MESSAGE);
                txtNewGroup.setText("");
                txtNewFamily.setText("");
                txtNewComponent.setText("");
                spinnerQtyNew.setValue(0);
            }
        }
    }

    private void btnRemoveAction() throws SQLException {
        String component = tblSelectedComponent.getValueAt(0, 2).toString();
        Apparatus temp2 = ApparatusSQL.getComponentDetails(component);
        int id = temp2.getId();
        //int qty = Integer.parseInt(spinnerQty.getValue().toString());
        //int newQty = temp2.getQty() - qty;
        ListSQL.setQty(id, 0);
    }

    public void initializeView() {
        try {
            flagUpdateView = true;
            flagNewComponent = false;
            pnlNewComponent.setVisible(false);
            initializeUpdateView();
            pnlUpdate.setVisible(true);
            jLayeredPane1.repaint();
            jLayeredPane1.revalidate();
        } catch (SQLException ex) {
            Logger.getLogger(ManageApparatusView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void initializeUpdateView() throws SQLException {
        setDtmFamily();
        setDtmComponent();
        setDtmSelectedComponent();
        resetTxt();
        jSeparator2.setVisible(true);
        jSeparator3.setVisible(false);

        cmbGroup.removeAllItems();
//        cmbGroup.addItem("<Select the group>");
        cmbGroup.addItem("<All groups>");

        List<String> groups = ApparatusSQL.getGroups();
        groups.forEach(group -> {
            cmbGroup.addItem(group);
        });
    }

    private void initializeNewComponentView() {
        jSeparator3.setVisible(true);
        jSeparator2.setVisible(false);
        txtNewGroup.setText("");
        txtNewFamily.setText("");
        txtNewComponent.setText("");
        spinnerQtyNew.setValue(0);
    }

    public void setAdminId(int adminId) {
        this.adminId = adminId;
    }

    private void setDtmFamily() {
        dtmFamily = (DefaultTableModel) this.tblFamily.getModel();
        dtmFamily.getDataVector().removeAllElements();
        dtmFamily.fireTableDataChanged();
    }

    private void setDtmComponent() {
        dtmComponent = (DefaultTableModel) this.tblComponent.getModel();
        dtmComponent.getDataVector().removeAllElements();
        dtmComponent.fireTableDataChanged();
    }

    private void setDtmSelectedComponent() {
        dtmSelectedComponent = (DefaultTableModel) this.tblSelectedComponent.getModel();
        dtmSelectedComponent.getDataVector().removeAllElements();
        dtmSelectedComponent.fireTableDataChanged();
    }

    private void resetTxt() {
        txtComponent.setText("");
        spinnerQty.setValue(0);
        cbRemove.setSelected(false);
        btnRemove.setEnabled(false);
    }

    private void cmbGroupAction(int group) throws SQLException {
        switch (group) {
            case -1:
                break;
            case 0:
                List<Object> list1 = ApparatusSQL.getAllFamilies();
                list1.forEach(object -> {
                    dtmFamily.addRow(new Object[]{object});
                });
                break;

            default:
                List<Object> list2 = ApparatusSQL.getFamilies(cmbGroup.getSelectedItem().toString());
                list2.forEach(object -> {
                    dtmFamily.addRow(new Object[]{object});
                });
                break;

        }
    }

    private void tblFamilyAction(int group, int family) throws SQLException {
        if (group == -1 || family == -1); else if (group == 0 && family == 0) {
            List<Apparatus> list = ApparatusSQL.getAllComponents();
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        } else if (group == 0 && family != 0) {
            List<Apparatus> list = ApparatusSQL.getComponentsByFamily(tblFamily.getValueAt(family, 0).toString());
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        } else if (family == 0 && group != 0) {
            List<Apparatus> list = ApparatusSQL.getComponentsByGroup(cmbGroup.getSelectedItem().toString());
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        } else {
            List<Apparatus> list = ApparatusSQL.getComponents(cmbGroup.getSelectedItem().toString(), tblFamily.getValueAt(family, 0).toString());
            list.forEach(apparatus -> {
                dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
            });
        }
    }

    private void txtComponentAction(int group, int family, String componentStr) throws SQLException {
        if (!componentStr.equals("")) {
            if (family == -1) {
                JOptionPane.showMessageDialog(this, "Select the family", "", JOptionPane.INFORMATION_MESSAGE);
                resetTxt();
                setDtmSelectedComponent();
            } else if (group == 0 && family == 0) {
                List<Apparatus> list = ApparatusSQL.searchAllComponents(componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            } else if (group == 0 && family != 0) {
                List<Apparatus> list = ApparatusSQL.searchComponentsByFamily(tblFamily.getValueAt(family, 0).toString(), componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            } else if (group != 0 && family == 0) {
                List<Apparatus> list = ApparatusSQL.searchComponentsByGroup(cmbGroup.getSelectedItem().toString(), componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            } else {
                List<Apparatus> list = ApparatusSQL.searchComponents(cmbGroup.getSelectedItem().toString(), tblFamily.getValueAt(family, 0).toString(), componentStr);
                if (list != null) {
                    list.forEach(apparatus -> {
                        dtmComponent.addRow(new Object[]{apparatus.getComponent(), apparatus.getQty()});
                    });
                } else {
                    setDtmSelectedComponent();
                }
            }
        } else {
            if (family == -1); else {
                tblFamilyAction(group, family);
            }
        }
    }

    private void tblComponentAction() throws SQLException {
        int row = tblComponent.getSelectedRow();
        if (row != -1) {
            Apparatus apparatus = ApparatusSQL.searchByComponent(tblComponent.getValueAt(row, 0).toString());
            if (apparatus != null) {
                setDtmSelectedComponent();
                dtmSelectedComponent.addRow(new Object[]{apparatus.getGroup(), apparatus.getFamily(), apparatus.getComponent(), apparatus.getQty()});
            }
        } else {
            setDtmSelectedComponent();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneComponent;
    private javax.swing.JScrollPane ScrollPaneFamily;
    private javax.swing.JScrollPane ScrollPaneSelectedComponent;
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel btnNewApparatusView;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel btnUpdateView;
    private javax.swing.JCheckBox cbRemove;
    private javax.swing.JComboBox<String> cmbGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblComponent;
    private javax.swing.JLabel lblComponentsNew;
    private javax.swing.JLabel lblFamilyNew;
    private javax.swing.JLabel lblGroup;
    private javax.swing.JLabel lblGroupNew;
    private javax.swing.JLabel lblQtyNew;
    private javax.swing.JLabel lblSelectedComponent;
    private javax.swing.JPanel pnlBtns;
    private javax.swing.JPanel pnlNewApparatusBtn;
    private javax.swing.JPanel pnlNewComponent;
    private javax.swing.JPanel pnlUpdate;
    private javax.swing.JPanel pnlUpdateBtn;
    private javax.swing.JSpinner spinnerQty;
    private javax.swing.JSpinner spinnerQtyNew;
    private javax.swing.JTable tblComponent;
    private javax.swing.JTable tblFamily;
    private javax.swing.JTable tblSelectedComponent;
    private javax.swing.JTextField txtComponent;
    private javax.swing.JTextField txtNewComponent;
    private javax.swing.JTextField txtNewFamily;
    private javax.swing.JTextField txtNewGroup;
    // End of variables declaration//GEN-END:variables
}
